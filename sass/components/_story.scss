.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba($color-black, 0.1);
  background-color: rgba($color-white, 0.6);
  border-radius: 3px;
  padding: 6rem;
  padding-left: 9rem;
  font-size: $default-font-size;
  transform: skewX(-12deg);

  & > * {
    transform: skewX(12deg);
  }

  @include respond(tab-port) {
    width: 100%;
    padding: 4rem;
    padding-left: 7rem;
  }

  @include respond(phone) {
    transform: skewX(0);
  }

  @include respond(small-phone){
    font-size: 1.3rem;
  
  }

  &__shape {
    position: relative;
    width: 15rem;
    height: 15rem;
    float: left; // pour que la proriété shape outiside fonctionne il faut que l'élément soit flottant et qu'il possède un dimension (width et height)
    -webkit-shape-outside: circle(50% at 50% 50%);
    shape-outside: circle(
      50% at 50% 50%
    ); // la 1ere valeur = le rayon du cercle ici 50% = 50% de 15rem = 7.5rem
    -webkit-clip-path: circle(50% at 50% 50%);
    clip-path: circle(50% at 50% 50%);
    transform: translateX(-3rem) skewX(12deg);

    @include respond(phone) {
      transform: skewX(0) translateX(-3rem);
    }

      @include respond(small-phone){
      float: none;
        position: relative;
        left: 45px;
        margin-bottom: 20px;
    }

    @include respond(ridiculous-phone){
      width: 0;
      height: 0;
    }
  }

  &__image {
    height: 100%;
    transform: translateX(-4rem) scale(1.4);
    backface-visibility: hidden;
    transition: all 0.5s;
  

  }

  &__text {
    transform: skewX(12deg);

    @include respond(phone) {
      transform: skewX(0);
    }

  }

  &__caption {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 20%);
    color: $color-white;
    text-transform: uppercase;
    font-size: 1.7rem;
    text-align: center;
    opacity: 0;
    transition: all 0.5s;
    backface-visibility: hidden;
  }

  &:hover &__caption {
    opacity: 1;
    transform: translate(-50%, -50%);
  }

  &:hover &__image {
    transform: translateX(-4rem) scale(1);
    filter: blur(3px) brightness(80%); // les valeurs en dessous de 100% obsurci et au dessus 100% éclaircis
  }
}
