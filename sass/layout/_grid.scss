.row {
  max-width: $grid-width;
  margin: 0 auto; // Permet de centrer automatiquement un bloc enfant

  &:not(:last-child) {
    // On selectionne tout sauf la pseudo class last-child !
    margin-bottom: $gutter-vertical;

    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-small;
    }
  }

  @include respond(tab-port) {
    max-width: 50rem;
    padding: 0 3rem;
  }

  @include clearfix;

  //le signe "^" selectionne toutes les class commen√ßant par "col-"
  // le signe "*" selectionne toutes les class qui comporte "col-"
  // le signe "$" selectionne toutes les class qui termine par "col-"
  [class^="col-"] {
    float: left;
    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      @include respond(tab-port) {
        margin-right: 0;
        margin-bottom: $gutter-vertical-small;
      }
    }
    @include respond(tab-port) {
      width: 100% !important;
    }
  }

  // pour utiliser une variable dans la fonction calc il faut mettre un # et les accolades
  .col-1-of-2 {
    width: calc(
      (100% - #{$gutter-horizontal}) / 2
    ); // la fonction calc() permet de faire des calculs
  }

  .col-1-of-3 {
    width: calc((100% - 2 *#{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    width: calc(
      2 * ((100% - 2 *#{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }

  .col-1-of-4 {
    width: calc((100% - 3 *#{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 *#{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }

  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 *#{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }
}
